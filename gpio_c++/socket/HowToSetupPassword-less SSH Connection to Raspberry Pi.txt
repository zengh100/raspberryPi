1.	Test connection to Pi
	In the windows command line, type "ssh pi@192.168.2.48". Since we have not setup ssh keys yet, you will need 	to type your password to remotely login to the Pi
	>ssh pi@192.168.2.48
	pi@192.168.2.48's password:
	Linux pizerow-1 6.6.51+rpt-rpi-v6 #1 Raspbian 1:6.6.51-1+rpt3 (2024-10-08) armv6l

	The programs included with the Debian GNU/Linux system are free software;
	the exact distribution terms for each program are described in the
	individual files in /usr/share/doc/*/copyright.

	Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
	permitted by applicable law.
	Last login: Sat Feb  8 12:41:01 2025
	pi@pizerow-1:~ $ exit
	logout
	Connection to 192.168.2.48 closed.

2	Install git-bash
a.	Git-Bash can be downloaded from here https://git-scm.com/downloads
b.	When running the Git-Bash installer that is downloaded, please leave all options as the defaults
	
3.	Setting up ssh keys
a.	SSH keys allow remote login quickly, because entering a password is no longer needed. Here are the steps:
b.	First, we need to generate keys. 
i.	Open a new git bash session by right clicking on the desktop and select "Git Bash Here"
ii.	Type the following command: "ssh-keygen -t rsa -b 4096"
iii.	When prompted for the save location, make sure to save the keys (public & private) to "C:/Users/<username>/.ssh/"
c.	In "C:/Users/<username>/.ssh/", you should see two files: id_rsa and id_rsa.pub
i.	Note: id_rsa.pub is NOT a microsoft publisher document although windows will tell you that it is. The ".pub" extension is meant to tell you that this is the public key and the id_rsa file without the ".pub" is the private key.
d.	Now, logon to the PI and open terminal, and go to "~/.ssh"
i.	If this doesnâ€™t exist, create the folder with "cd ~; mkdir .ssh"
e.	Inside the .ssh folder, create a new file using the command "touch authorized_keys". Note the American spelling
f.	Now, using the editor of your choice, copy all the text from "C:/Users/<username>/.ssh/id_rsa.pub" on your laptop to "~/.ssh/authorized_keys" on the PI.
3.	Test Password-less SSH
a.	Repeat steps 1.b to 1.c and see if it does not prompt you for a password to login. If so, then the passwordless setup was successful.


file vscode_pi.config

